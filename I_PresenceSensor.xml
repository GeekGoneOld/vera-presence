<?xml version="1.0" encoding="utf-8"?>
<implementation>
  <specVersion>
    <major>1</major>
    <minor>0</minor>
  </specVersion>
  <startup>main</startup>
  <functions>
		local PRESENCE_SID = "urn:afoyi-com:serviceId:PresenceSensor1"
		local SECURITY_SID = "urn:micasaverde-com:serviceId:SecuritySensor1"
		local DEFAULT_ADDRESS = "00:00:00:00:00:00"
		local DEFAULT_DEVICETYPE = "bluetooth"

		--
		-- Logs a message to Vera log file
		--
		local function log(lul_device, text)
			local id = lul_device or "unknown"
			luup.log("PresenceSensor #" .. id .. " " .. text)
		end

		--
		-- Checks to see if UI7 is used and changes json file once if so
		--
		local function checkVersion(lul_device)
			local ui7Check = luup.variable_get(PRESENCE_SID, "UI7Check", lul_device) or ""
			if ui7Check == "" then
				luup.variable_set(PRESENCE_SID, "UI7Check", "false", lul_device)
				ui7Check = "false"
			end
			if( luup.version_branch == 1 and luup.version_major == 7 and ui7Check == "false") then
				luup.variable_set(PRESENCE_SID, "UI7Check", "true", lul_device)
				luup.attr_set("device_json", "D_PresenceSensor_UI7.json", lul_device)
				luup.reload()
			end
		end

		--
		-- Initializes variables not yet found in config
		--
		local function initSettings(lul_device)
			if (luup.variable_get(PRESENCE_SID, "Address", lul_device) or "") == "" then
				luup.variable_set(PRESENCE_SID, "Address", DEFAULT_ADDRESS, lul_device)
				log(lul_device, "Initialized variable: 'Address' = " .. DEFAULT_ADDRESS)
				luup.variable_set(PRESENCE_SID, "DeviceType", DEFAULT_DEVICETYPE, lul_device)
				log(lul_device, "Initialized variable: 'DeviceType' = " .. DEFAULT_DEVICETYPE)
				luup.variable_set(SECURITY_SID, "Tripped", "0", lul_device)
				log(lul_device, "Initialized variable: 'Tripped' = 0")
				luup.variable_set(SECURITY_SID, "LastTrip", "0", lul_device)
				log(lul_device, "Initialized variable: 'LastTrip' = 0")
				-- trick to make Armed (already exists) show up in variables
				luup.variable_set(SECURITY_SID, "Armed", "1", lul_device)
				luup.variable_set(SECURITY_SID, "Armed", "0", lul_device)
				log(lul_device, "Initialized variable: 'Armed' = 0")
			end
		end

		function main(lul_device)
			log(lul_device, "starting up")

			--check UI version
			checkVersion(lul_device)

			-- Validate that the device settings are configured
			initSettings(lul_device)

			return true, "Startup success", "PresenceSensor"
		end
	</functions>
  <actionList>
    <action>
      <serviceId>urn:afoyi-com:serviceId:PresenceSensor1</serviceId>
      <name>SetPresent</name>
      <run>
				local origTripped = luup.variable_get(SECURITY_SID, "Tripped", lul_device) or "0"
				if (origTripped  ~= lul_settings.newPresentValue) then
					luup.variable_set(SECURITY_SID, "Tripped", lul_settings.newPresentValue, lul_device)
					if (lul_settings.newPresentValue == "1") then
						local time = os.time(os.date('*t'))
						luup.variable_set(SECURITY_SID, "LastTrip", time, lul_device)
					end
				end
				return true
			</run>
    </action>
    <action>
      <serviceId>urn:micasaverde-com:serviceId:SecuritySensor1</serviceId>
      <name>SetArmed</name>
      <run>
				luup.variable_set(SECURITY_SID, "Armed", lul_settings.newArmedValue, lul_device)
				return true
			</run>
    </action>
  </actionList>
</implementation>
